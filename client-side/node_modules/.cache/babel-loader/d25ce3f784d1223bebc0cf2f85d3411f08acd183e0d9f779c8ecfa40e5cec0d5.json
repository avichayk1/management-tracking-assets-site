{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AvichayKadosh\\\\reactcode\\\\management-tracking-assets-site\\\\src\\\\EmployeeCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport './EmployeeCalendar.css';\nimport EmployeeSideBar from './EmployeeSideBar'; // Assuming you have this component\nimport Header from './header'; // Assuming you have this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeCalendar = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [tasks, setTasks] = useState([{\n    title: 'Lamp repair for the David Babyan asset',\n    date: '2024-03-13'\n  }, {\n    title: 'Gas leak test for Or Cohen asset',\n    date: '2024-02-13'\n  }, {\n    title: 'Staff meeting',\n    date: '2024-04-01'\n  }, {\n    title: 'Signing a rent contract for Shir Levi asset',\n    date: '2024-02-29'\n  }, {\n    title: 'Issuing a monthly financial report',\n    start: '2024-03-01',\n    end: '2024-03-04'\n  }]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const onDateChange = newDate => {\n    setDate(newDate);\n  };\n  const renderTasksForDate = date => {\n    const tasksForDate = tasks.filter(task => task.date === date.toISOString().split('T')[0] || task.start && new Date(task.start) <= date && new Date(task.end) >= date);\n    if (tasksForDate.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-on-date\",\n        children: tasksForDate.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          onClick: () => setSelectedTask(task),\n          children: task.title\n        }, task.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  };\n  const closeTaskDetails = () => {\n    setSelectedTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-calendar\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EmployeeSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-container\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: onDateChange,\n        value: date,\n        locale: \"en-US\",\n        tileContent: ({\n          date\n        }) => renderTasksForDate(date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-details\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: selectedTask.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", selectedTask.date || `${selectedTask.start} to ${selectedTask.end}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeTaskDetails,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeCalendar, \"Yla4jrk/quPOA2WYyAKO+zdfwfI=\");\n_c = EmployeeCalendar;\nexport default EmployeeCalendar;\nvar _c;\n$RefreshReg$(_c, \"EmployeeCalendar\");","map":{"version":3,"names":["React","useState","Calendar","EmployeeSideBar","Header","jsxDEV","_jsxDEV","EmployeeCalendar","_s","date","setDate","Date","tasks","setTasks","title","start","end","selectedTask","setSelectedTask","onDateChange","newDate","renderTasksForDate","tasksForDate","filter","task","toISOString","split","length","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","closeTaskDetails","onChange","value","locale","tileContent","_c","$RefreshReg$"],"sources":["C:/Users/AvichayKadosh/reactcode/management-tracking-assets-site/src/EmployeeCalendar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './EmployeeCalendar.css';\r\nimport EmployeeSideBar from './EmployeeSideBar'; // Assuming you have this component\r\nimport Header from './header'; // Assuming you have this component\r\n\r\nconst EmployeeCalendar = () => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [tasks, setTasks] = useState([\r\n        { title: 'Lamp repair for the David Babyan asset', date: '2024-03-13' },\r\n        { title: 'Gas leak test for Or Cohen asset', date: '2024-02-13' },\r\n        { title: 'Staff meeting', date: '2024-04-01' },\r\n        { title: 'Signing a rent contract for Shir Levi asset', date: '2024-02-29' },\r\n        { title: 'Issuing a monthly financial report', start: '2024-03-01', end: '2024-03-04' },\r\n    ]);\r\n    const [selectedTask, setSelectedTask] = useState(null);\r\n\r\n    const onDateChange = (newDate) => {\r\n        setDate(newDate);\r\n    };\r\n\r\n    const renderTasksForDate = (date) => {\r\n        const tasksForDate = tasks.filter(task =>\r\n            task.date === date.toISOString().split('T')[0] ||\r\n            (task.start && new Date(task.start) <= date && new Date(task.end) >= date)\r\n        );\r\n\r\n        if (tasksForDate.length > 0) {\r\n            return (\r\n                <div className=\"tasks-on-date\">\r\n                    {tasksForDate.map(task => (\r\n                        <div\r\n                            key={task.title}\r\n                            className=\"task\"\r\n                            onClick={() => setSelectedTask(task)}\r\n                        >\r\n                            {task.title}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const closeTaskDetails = () => {\r\n        setSelectedTask(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"employee-calendar\">\r\n            <Header />\r\n            <EmployeeSideBar />\r\n            <div className=\"calendar-container\">\r\n                <Calendar\r\n                    onChange={onDateChange}\r\n                    value={date}\r\n                    locale=\"en-US\"\r\n                    tileContent={({ date }) => renderTasksForDate(date)}\r\n                />\r\n            </div>\r\n            {selectedTask && (\r\n                <div className=\"task-details\">\r\n                    <div className=\"task-details-content\">\r\n                        <h1>{selectedTask.title}</h1>\r\n                        <p>Date: {selectedTask.date || `${selectedTask.start} to ${selectedTask.end}`}</p>\r\n                        <button onClick={closeTaskDetails}>Close</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmployeeCalendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}